{"body":"Monitor\r\n=======\r\n\r\nRemote monitoring for Node.js applications\r\n\r\nIntroduction\r\n------------\r\n\r\nThis package provides a foundation for monitoring and controlling remote\r\nnode.js applications.\r\n\r\nIt introduces the concept of a [Probe](http://lorenwest.github.com/monitor/doc/classes/Probe.html) -\r\na small software component capable of exposing and controlling state within a\r\nrunning node.js server.\r\n\r\nProbes are written as\r\n[Backbone](http://documentcloud.github.com/backbone) models, and\r\nremain dormant in your process until instantiated from remote monitors.\r\n\r\nFrom the monitoring process, a [Monitor](http://lorenwest.github.com/monitor/doc/classes/Monitor.html) class\r\nis provided to connect with a remote probe.\r\n\r\nThis package is used for writing and embedding probes into your app server,\r\nand for writing custom clients for inspecting and controlling these probes.\r\nA companion package  -\r\n[Node-Monitor](http://lorenwest.github.com/node-monitor) - provides a user interface\r\nfor building real-time monitor dashboards.\r\n\r\nQuick Start\r\n-----------\r\n\r\n**Install using npm**\r\n\r\n    $ npm install monitor\r\n\r\n**Start the monitor service (standalone)**\r\n\r\nNormally you'll include this package into your own application server, but you can\r\nrun as a standalone application as well.\r\n\r\n    $ npm start monitor\r\n\r\n**Observe a probe from a remote process**\r\n\r\nIn this example we're using a REPL console to connect with the\r\nbuilt-in [Process](http://http://lorenwest.github.com/monitor/doc/classes/Process.html) probe.\r\n\r\nOpen a REPL console from another terminal\r\n\r\n    $ node\r\n\r\nCreate a monitor for the Process probe\r\n\r\n    > var Monitor = require('monitor');\r\n    > var processMonitor = new Monitor({server:'localhost', probeClass: 'Process'});\r\n\r\nConnect with the probe, and view the properties\r\n\r\n    > processMonitor.connect();\r\n    > processMonitor.toJSON();\r\n\r\nThe monitor is a Backbone model, so you can watch for changes\r\n\r\n    > var showFreeMem = function(){console.log(processMonitor.get('freemem'))};\r\n    > processMonitor.on('change', showFreeMem);\r\n\r\nSee Also\r\n--------\r\n\r\n[API-Docs](http://lorenwest.github.com/monitor/doc/index.html) Monitor internal documentation\r\n[Node-Monitor](http://lorenwest.github.com/node-monitor) Companion webapp for building real-time monitor dashboards\r\n\r\nLicense\r\n-------\r\n\r\nReleased under the Apache License 2.0\r\n\r\nSee [LICENSE](https://gothub.com/lorenwest/monitor/blob/master/LICENSE) file.\r\n\r\nCopyright (c) 2012 Loren West\r\n","name":"Monitor","google":"","tagline":"Remote monitoring for Node.js applications","note":"Don't delete this file! It's used internally to help with page regeneration."}